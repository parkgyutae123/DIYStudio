//------------------------------------------------------------------------------
// <auto-generated>
//     이 코드는 도구를 사용하여 생성되었습니다.
//     런타임 버전:4.0.30319.42000
//
//     파일 내용을 변경하면 잘못된 동작이 발생할 수 있으며, 코드를 다시 생성하면
//     이러한 변경 내용이 손실됩니다.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SF_DIY.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Product", Namespace="http://schemas.datacontract.org/2004/07/For_Seller")]
    [System.SerializableAttribute()]
    public partial class Product : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CompareToVoxelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double DiameterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double HeightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MaxLengthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MaxWidthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MinLengthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MinWidthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ModelTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SelectedLengthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SelectedWidthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TextureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double WidthField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CompareToVoxel {
            get {
                return this.CompareToVoxelField;
            }
            set {
                if ((this.CompareToVoxelField.Equals(value) != true)) {
                    this.CompareToVoxelField = value;
                    this.RaisePropertyChanged("CompareToVoxel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Diameter {
            get {
                return this.DiameterField;
            }
            set {
                if ((this.DiameterField.Equals(value) != true)) {
                    this.DiameterField = value;
                    this.RaisePropertyChanged("Diameter");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Height {
            get {
                return this.HeightField;
            }
            set {
                if ((this.HeightField.Equals(value) != true)) {
                    this.HeightField = value;
                    this.RaisePropertyChanged("Height");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaxLength {
            get {
                return this.MaxLengthField;
            }
            set {
                if ((this.MaxLengthField.Equals(value) != true)) {
                    this.MaxLengthField = value;
                    this.RaisePropertyChanged("MaxLength");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaxWidth {
            get {
                return this.MaxWidthField;
            }
            set {
                if ((this.MaxWidthField.Equals(value) != true)) {
                    this.MaxWidthField = value;
                    this.RaisePropertyChanged("MaxWidth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MinLength {
            get {
                return this.MinLengthField;
            }
            set {
                if ((this.MinLengthField.Equals(value) != true)) {
                    this.MinLengthField = value;
                    this.RaisePropertyChanged("MinLength");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MinWidth {
            get {
                return this.MinWidthField;
            }
            set {
                if ((this.MinWidthField.Equals(value) != true)) {
                    this.MinWidthField = value;
                    this.RaisePropertyChanged("MinWidth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ModelType {
            get {
                return this.ModelTypeField;
            }
            set {
                if ((this.ModelTypeField.Equals(value) != true)) {
                    this.ModelTypeField = value;
                    this.RaisePropertyChanged("ModelType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Num {
            get {
                return this.NumField;
            }
            set {
                if ((this.NumField.Equals(value) != true)) {
                    this.NumField = value;
                    this.RaisePropertyChanged("Num");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SelectedLength {
            get {
                return this.SelectedLengthField;
            }
            set {
                if ((this.SelectedLengthField.Equals(value) != true)) {
                    this.SelectedLengthField = value;
                    this.RaisePropertyChanged("SelectedLength");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SelectedWidth {
            get {
                return this.SelectedWidthField;
            }
            set {
                if ((this.SelectedWidthField.Equals(value) != true)) {
                    this.SelectedWidthField = value;
                    this.RaisePropertyChanged("SelectedWidth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Texture {
            get {
                return this.TextureField;
            }
            set {
                if ((object.ReferenceEquals(this.TextureField, value) != true)) {
                    this.TextureField = value;
                    this.RaisePropertyChanged("Texture");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Width {
            get {
                return this.WidthField;
            }
            set {
                if ((this.WidthField.Equals(value) != true)) {
                    this.WidthField = value;
                    this.RaisePropertyChanged("Width");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/LoadImage", ReplyAction="http://tempuri.org/IService1/LoadImageResponse")]
        byte[] LoadImage(string imageNmae);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/LoadImage", ReplyAction="http://tempuri.org/IService1/LoadImageResponse")]
        System.Threading.Tasks.Task<byte[]> LoadImageAsync(string imageNmae);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/LoadList", ReplyAction="http://tempuri.org/IService1/LoadListResponse")]
        string[] LoadList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/LoadList", ReplyAction="http://tempuri.org/IService1/LoadListResponse")]
        System.Threading.Tasks.Task<string[]> LoadListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SaveImage", ReplyAction="http://tempuri.org/IService1/SaveImageResponse")]
        bool SaveImage(string name, byte[] imahe);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SaveImage", ReplyAction="http://tempuri.org/IService1/SaveImageResponse")]
        System.Threading.Tasks.Task<bool> SaveImageAsync(string name, byte[] imahe);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/RemoveImage", ReplyAction="http://tempuri.org/IService1/RemoveImageResponse")]
        void RemoveImage(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/RemoveImage", ReplyAction="http://tempuri.org/IService1/RemoveImageResponse")]
        System.Threading.Tasks.Task RemoveImageAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetRectangular_lumber", ReplyAction="http://tempuri.org/IService1/GetRectangular_lumberResponse")]
        SF_DIY.ServiceReference1.Product[] GetRectangular_lumber();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetRectangular_lumber", ReplyAction="http://tempuri.org/IService1/GetRectangular_lumberResponse")]
        System.Threading.Tasks.Task<SF_DIY.ServiceReference1.Product[]> GetRectangular_lumberAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetBoard_lumber", ReplyAction="http://tempuri.org/IService1/GetBoard_lumberResponse")]
        SF_DIY.ServiceReference1.Product[] GetBoard_lumber();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetBoard_lumber", ReplyAction="http://tempuri.org/IService1/GetBoard_lumberResponse")]
        System.Threading.Tasks.Task<SF_DIY.ServiceReference1.Product[]> GetBoard_lumberAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetCylinder_lumber", ReplyAction="http://tempuri.org/IService1/GetCylinder_lumberResponse")]
        SF_DIY.ServiceReference1.Product[] GetCylinder_lumber();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetCylinder_lumber", ReplyAction="http://tempuri.org/IService1/GetCylinder_lumberResponse")]
        System.Threading.Tasks.Task<SF_DIY.ServiceReference1.Product[]> GetCylinder_lumberAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetImageFile", ReplyAction="http://tempuri.org/IService1/GetImageFileResponse")]
        System.Collections.Generic.Dictionary<string, byte[]> GetImageFile();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetImageFile", ReplyAction="http://tempuri.org/IService1/GetImageFileResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, byte[]>> GetImageFileAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SaveProduct", ReplyAction="http://tempuri.org/IService1/SaveProductResponse")]
        bool SaveProduct(SF_DIY.ServiceReference1.Product[] ProductList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SaveProduct", ReplyAction="http://tempuri.org/IService1/SaveProductResponse")]
        System.Threading.Tasks.Task<bool> SaveProductAsync(SF_DIY.ServiceReference1.Product[] ProductList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/RemoveProduct", ReplyAction="http://tempuri.org/IService1/RemoveProductResponse")]
        bool RemoveProduct(SF_DIY.ServiceReference1.Product[] ProductList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/RemoveProduct", ReplyAction="http://tempuri.org/IService1/RemoveProductResponse")]
        System.Threading.Tasks.Task<bool> RemoveProductAsync(SF_DIY.ServiceReference1.Product[] ProductList);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : SF_DIY.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<SF_DIY.ServiceReference1.IService1>, SF_DIY.ServiceReference1.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public byte[] LoadImage(string imageNmae) {
            return base.Channel.LoadImage(imageNmae);
        }
        
        public System.Threading.Tasks.Task<byte[]> LoadImageAsync(string imageNmae) {
            return base.Channel.LoadImageAsync(imageNmae);
        }
        
        public string[] LoadList() {
            return base.Channel.LoadList();
        }
        
        public System.Threading.Tasks.Task<string[]> LoadListAsync() {
            return base.Channel.LoadListAsync();
        }
        
        public bool SaveImage(string name, byte[] imahe) {
            return base.Channel.SaveImage(name, imahe);
        }
        
        public System.Threading.Tasks.Task<bool> SaveImageAsync(string name, byte[] imahe) {
            return base.Channel.SaveImageAsync(name, imahe);
        }
        
        public void RemoveImage(string name) {
            base.Channel.RemoveImage(name);
        }
        
        public System.Threading.Tasks.Task RemoveImageAsync(string name) {
            return base.Channel.RemoveImageAsync(name);
        }
        
        public SF_DIY.ServiceReference1.Product[] GetRectangular_lumber() {
            return base.Channel.GetRectangular_lumber();
        }
        
        public System.Threading.Tasks.Task<SF_DIY.ServiceReference1.Product[]> GetRectangular_lumberAsync() {
            return base.Channel.GetRectangular_lumberAsync();
        }
        
        public SF_DIY.ServiceReference1.Product[] GetBoard_lumber() {
            return base.Channel.GetBoard_lumber();
        }
        
        public System.Threading.Tasks.Task<SF_DIY.ServiceReference1.Product[]> GetBoard_lumberAsync() {
            return base.Channel.GetBoard_lumberAsync();
        }
        
        public SF_DIY.ServiceReference1.Product[] GetCylinder_lumber() {
            return base.Channel.GetCylinder_lumber();
        }
        
        public System.Threading.Tasks.Task<SF_DIY.ServiceReference1.Product[]> GetCylinder_lumberAsync() {
            return base.Channel.GetCylinder_lumberAsync();
        }
        
        public System.Collections.Generic.Dictionary<string, byte[]> GetImageFile() {
            return base.Channel.GetImageFile();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, byte[]>> GetImageFileAsync() {
            return base.Channel.GetImageFileAsync();
        }
        
        public bool SaveProduct(SF_DIY.ServiceReference1.Product[] ProductList) {
            return base.Channel.SaveProduct(ProductList);
        }
        
        public System.Threading.Tasks.Task<bool> SaveProductAsync(SF_DIY.ServiceReference1.Product[] ProductList) {
            return base.Channel.SaveProductAsync(ProductList);
        }
        
        public bool RemoveProduct(SF_DIY.ServiceReference1.Product[] ProductList) {
            return base.Channel.RemoveProduct(ProductList);
        }
        
        public System.Threading.Tasks.Task<bool> RemoveProductAsync(SF_DIY.ServiceReference1.Product[] ProductList) {
            return base.Channel.RemoveProductAsync(ProductList);
        }
    }
}
